if (error == 3) {
stop(content$error_msg)
}
}
if (length(content) == 0) {
stop("Post could not be found")
}
out <- list()
out[["post"]] <- postDataToDF(content)
if (likes && n.likes > 0)
out[["likes"]] <- likesDataToDF(content$likes$data)
if (likes && n.likes > 0)
n.l <- ifelse(!is.null(out$likes), dim(out$likes)[1],
0)
if (n.likes == 0)
n.l <- 0
if (!likes)
n.l <- Inf
if (comments && n.likes > 0)
out[["comments"]] <- commentsDataToDF(content$comments$data)
if (comments && n.likes > 0)
n.c <- ifelse(!is.null(out$comments), dim(out$comments)[1],
0)
if (n.comments == 0)
n.c <- 0
if (!comments)
n.c <- Inf
if (n.likes > n.l || n.comments > n.c) {
if (likes)
url.likes <- content$likes$paging$`next`
if (!likes)
url.likes <- NULL
if (comments)
url.comments <- content$comments$paging$`next`
if (!comments)
url.comments <- NULL
if (!is.null(url.likes) && likes && n.likes > n.l) {
url <- content$likes$paging$`next`
content <- callAPI(url = url.likes, token = token)
out[["likes"]] <- rbind(out[["likes"]], likesDataToDF(content$data))
n.l <- dim(out$likes)[1]
while (n.l < n.likes & length(content$data) > 0 &
!is.null(url <- content$paging$`next`)) {
url <- content$paging$`next`
content <- callAPI(url = url, token = token)
out[["likes"]] <- rbind(out[["likes"]], likesDataToDF(content$data))
n.l <- dim(out$likes)[1]
}
}
if (!is.null(url.comments) && comments && n.comments >
n.c) {
content <- callAPI(url = url.comments, token = token)
out[["comments"]] <- rbind(out[["comments"]], commentsDataToDF(content$data))
n.c <- dim(out$comments)[1]
while (n.c < n.comments & length(content$data) >
0 & !is.null(content$paging$`next`)) {
url <- content$paging$`next`
content <- callAPI(url = url, token = token)
out[["comments"]] <- rbind(out[["comments"]],
commentsDataToDF(content$data))
n.c <- dim(out$comments)[1]
}
}
}
return(out)
}
function f (post, token, n = 500, comments = TRUE, likes = TRUE,
n.likes = n, n.comments = n)
{
url <- paste0("https://graph.facebook.com/", post, "?fields=from,message,created_time,type,link,name,shares")
if (comments == TRUE) {
url <- paste0(url, ",comments.summary(true).", "fields(id,from,message,created_time,like_count)")
if (n.comments >= 500) {
url <- paste0(url, ".limit(500)")
}
if (n.comments < 500) {
url <- paste0(url, ".limit(", n.comments, ")")
}
}
if (comments == FALSE) {
url <- paste0(url, ",comments.summary(true)")
}
if (likes == TRUE) {
url <- paste0(url, ",likes.summary(true).", "fields(id,name)")
if (n.likes >= 2000) {
url <- paste0(url, ".limit(2000)")
}
if (n.likes < 2000) {
url <- paste0(url, ".limit(", n.likes, ")")
}
}
if (likes == FALSE) {
url <- paste0(url, ",likes.summary(true)")
}
print(url)
content <- callAPI(url = url, token = token)
error <- 0
while (length(content$error_code) > 0) {
cat("Error!\n")
Sys.sleep(0.5)
error <- error + 1
content <- callAPI(url = url, token = token)
if (error == 3) {
stop(content$error_msg)
}
}
if (length(content) == 0) {
stop("Post could not be found")
}
out <- list()
out[["post"]] <- postDataToDF(content)
if (likes && n.likes > 0)
out[["likes"]] <- likesDataToDF(content$likes$data)
if (likes && n.likes > 0)
n.l <- ifelse(!is.null(out$likes), dim(out$likes)[1],
0)
if (n.likes == 0)
n.l <- 0
if (!likes)
n.l <- Inf
if (comments && n.likes > 0)
out[["comments"]] <- commentsDataToDF(content$comments$data)
if (comments && n.likes > 0)
n.c <- ifelse(!is.null(out$comments), dim(out$comments)[1],
0)
if (n.comments == 0)
n.c <- 0
if (!comments)
n.c <- Inf
if (n.likes > n.l || n.comments > n.c) {
if (likes)
url.likes <- content$likes$paging$`next`
if (!likes)
url.likes <- NULL
if (comments)
url.comments <- content$comments$paging$`next`
if (!comments)
url.comments <- NULL
if (!is.null(url.likes) && likes && n.likes > n.l) {
url <- content$likes$paging$`next`
content <- callAPI(url = url.likes, token = token)
out[["likes"]] <- rbind(out[["likes"]], likesDataToDF(content$data))
n.l <- dim(out$likes)[1]
while (n.l < n.likes & length(content$data) > 0 &
!is.null(url <- content$paging$`next`)) {
url <- content$paging$`next`
content <- callAPI(url = url, token = token)
out[["likes"]] <- rbind(out[["likes"]], likesDataToDF(content$data))
n.l <- dim(out$likes)[1]
}
}
if (!is.null(url.comments) && comments && n.comments >
n.c) {
content <- callAPI(url = url.comments, token = token)
out[["comments"]] <- rbind(out[["comments"]], commentsDataToDF(content$data))
n.c <- dim(out$comments)[1]
while (n.c < n.comments & length(content$data) >
0 & !is.null(content$paging$`next`)) {
url <- content$paging$`next`
content <- callAPI(url = url, token = token)
out[["comments"]] <- rbind(out[["comments"]],
commentsDataToDF(content$data))
n.c <- dim(out$comments)[1]
}
}
}
return(out)
}
f <- function (post, token, n = 500, comments = TRUE, likes = TRUE,
}
f <- function (post, token, n = 500, comments = TRUE, likes = TRUE,
n.likes = n, n.comments = n)
{
url <- paste0("https://graph.facebook.com/", post, "?fields=from,message,created_time,type,link,name,shares")
if (comments == TRUE) {
url <- paste0(url, ",comments.summary(true).", "fields(id,from,message,created_time,like_count)")
if (n.comments >= 500) {
url <- paste0(url, ".limit(500)")
}
if (n.comments < 500) {
url <- paste0(url, ".limit(", n.comments, ")")
}
}
if (comments == FALSE) {
url <- paste0(url, ",comments.summary(true)")
}
if (likes == TRUE) {
url <- paste0(url, ",likes.summary(true).", "fields(id,name)")
if (n.likes >= 2000) {
url <- paste0(url, ".limit(2000)")
}
if (n.likes < 2000) {
url <- paste0(url, ".limit(", n.likes, ")")
}
}
if (likes == FALSE) {
url <- paste0(url, ",likes.summary(true)")
}
print(url)
content <- callAPI(url = url, token = token)
error <- 0
while (length(content$error_code) > 0) {
cat("Error!\n")
Sys.sleep(0.5)
error <- error + 1
content <- callAPI(url = url, token = token)
if (error == 3) {
stop(content$error_msg)
}
}
if (length(content) == 0) {
stop("Post could not be found")
}
out <- list()
out[["post"]] <- postDataToDF(content)
if (likes && n.likes > 0)
out[["likes"]] <- likesDataToDF(content$likes$data)
if (likes && n.likes > 0)
n.l <- ifelse(!is.null(out$likes), dim(out$likes)[1],
0)
if (n.likes == 0)
n.l <- 0
if (!likes)
n.l <- Inf
if (comments && n.likes > 0)
out[["comments"]] <- commentsDataToDF(content$comments$data)
if (comments && n.likes > 0)
n.c <- ifelse(!is.null(out$comments), dim(out$comments)[1],
0)
if (n.comments == 0)
n.c <- 0
if (!comments)
n.c <- Inf
if (n.likes > n.l || n.comments > n.c) {
if (likes)
url.likes <- content$likes$paging$`next`
if (!likes)
url.likes <- NULL
if (comments)
url.comments <- content$comments$paging$`next`
if (!comments)
url.comments <- NULL
if (!is.null(url.likes) && likes && n.likes > n.l) {
url <- content$likes$paging$`next`
content <- callAPI(url = url.likes, token = token)
out[["likes"]] <- rbind(out[["likes"]], likesDataToDF(content$data))
n.l <- dim(out$likes)[1]
while (n.l < n.likes & length(content$data) > 0 &
!is.null(url <- content$paging$`next`)) {
url <- content$paging$`next`
content <- callAPI(url = url, token = token)
out[["likes"]] <- rbind(out[["likes"]], likesDataToDF(content$data))
n.l <- dim(out$likes)[1]
}
}
if (!is.null(url.comments) && comments && n.comments >
n.c) {
content <- callAPI(url = url.comments, token = token)
out[["comments"]] <- rbind(out[["comments"]], commentsDataToDF(content$data))
n.c <- dim(out$comments)[1]
while (n.c < n.comments & length(content$data) >
0 & !is.null(content$paging$`next`)) {
url <- content$paging$`next`
content <- callAPI(url = url, token = token)
out[["comments"]] <- rbind(out[["comments"]],
commentsDataToDF(content$data))
n.c <- dim(out$comments)[1]
}
}
}
return(out)
}
f("629364947157403_770415483052348", "CAACEdEose0cBANjWbN8YbIpfmaDPTZB0M3ap9j7mxybHkF9kTvZAMztjImNsjLCSu3gJxZAsZBKqoxSOwfLKB11q4lsYedL5lEd77k6Xw59DmDaaxtQgx6UukxyQAMbDaCj9JyqLATTA6afNEDA6SOAXaUSSKcgT8wY5U7TmmZBzQa6v6Stj778sKCQQZAHgxPhtFimjQIfvEQpDqomdAG")
shiny::runApp('C:/McHacks/mcviz')
adding_api
getLikes
getCommentLikes
library(adding_api)
source('C:/McHacks/testing-r/adding_api.R')
source('C:/McHacks/testing-r/adding_api.R')
source('C:/McHacks/testing-r/adding_api.R')
source('C:/McHacks/testing-r/adding_api.R')
source('C:/McHacks/testing-r/adding_api.R')
comment = "629364947157403_770415483052348"
token = "CAACEdEose0cBANjWbN8YbIpfmaDPTZB0M3ap9j7mxybHkF9kTvZAMztjImNsjLCSu3gJxZAsZBKqoxSOwfLKB11q4lsYedL5lEd77k6Xw59DmDaaxtQgx6UukxyQAMbDaCj9JyqLATTA6afNEDA6SOAXaUSSKcgT8wY5U7TmmZBzQa6v6Stj778sKCQQZAHgxPhtFimjQIfvEQpDqomdAG"
getCommentLikes(comment, token)
getCommentLikes(comment, token)
getCommentLikes(comment, token)
getCommentLikes(comment, token)
source('C:/McHacks/testing-r/adding_api.R')
source('C:/McHacks/testing-r/adding_api.R')
getCommentLikes(comment, token)
d = getCommentLikes(comment, token)
d$data
comment = "629364947157403_761091863984710"
d = getCommentLikes(comment, token)
d$data
comment
comment = paste(comment, "761450747282155")
comment
comment <- "629364947157403_761091863984710_761450747282155"
getCommentLikes(comment, token)
getCommentLikes(comment, token) $dtaa
getCommentLikes(comment, token) $data
comment
post =  "629364947157403_761091863984710"
getPost(post, token)
get_post_likes
p = getPost(post, token)
p$likes
p$comments
p$comments$id
p$comments$id[0]
v = c("bac", "ab",'aw','a')
for (i in v) {print(i)}
getCommentLikes(post, token)
getCommentLikes(post, token)$data
# Gets the likes on a comment
post = "629364947157403_761091863984710"
token = "CAACEdEose0cBANjWbN8YbIpfmaDPTZB0M3ap9j7mxybHkF9kTvZAMztjImNsjLCSu3gJxZAsZBKqoxSOwfLKB11q4lsYedL5lEd77k6Xw59DmDaaxtQgx6UukxyQAMbDaCj9JyqLATTA6afNEDA6SOAXaUSSKcgT8wY5U7TmmZBzQa6v6Stj778sKCQQZAHgxPhtFimjQIfvEQpDqomdAG"
getCommentLikes(post, token)
# comment: a numeric ID for a post in the form "1234567890_1234567890"
# Gets the likes on a comment
# comment: a numeric ID for a post in the form "1234567890_1234567890"
#          OR a comment in the form "1234567890_1234567890_1234567890"
# token: access token
# n: maximum number of likes. Hard capped to 500.
#
# Source code modified from https://github.com/pablobarbera/Rfacebook
getCommentLikes <- function (comment, token, n = 500)
{
url <- paste0("https://graph.facebook.com/", comment, "/likes?")
if (n >= 500) {
url <- paste0(url, ".limit(500)")
}
else if (n < 500) {
url <- paste0(url, ".limit(", n, ")")
}
content <- callAPI(url = url, token = token)
error <- 0
while (length(content$error_code) > 0) {
cat("Error!\n")
Sys.sleep(0.5)
error <- error + 1
content <- callAPI(url = url, token = token)
if (error == 3) {
stop(content$error_msg)
}
}
return (content$data)
}
# Source code directly copied from: https://github.com/pablobarbera/Rfacebook
callAPI <- function(url, token){
if (class(token)[1]=="config"){
url.data <- GET(url, config=token)
}
if (class(token)[1]=="Token2.0"){
url.data <- GET(url, config(token=token))
}
if (class(token)[1]=="character"){
url <- paste0(url, "&access_token=", token)
url <- gsub(" ", "%20", url)
url.data <- GET(url)
}
if (class(token)[1]!="character" & class(token)[1]!="config" & class(token)[1]!="Token2.0"){
stop("Error in access token. See help for details.")
}
content <- fromJSON(rawToChar(url.data$content))
if (length(content$error)>0){
stop(content$error$message)
}
return(content)
}
getCommentLikes(post, token)
getCommentLikes(post, token)$name
getCommentLikes(post, token)$data
likes=  getCommentLikes(post, token)
library(Rfacebook)
post = getPost(post, token)
post$comments
data.frame(from=integer(0), to=integer(0))
d =  data.frame(from=0, to=0)
d = dbind(d, data.frame(from=13, to=14))
d = cbind(d, data.frame(from=13, to=14))
d
d = rbind(d, data.frame(from=13, to=14))
d =  data.frame(from=0, to=0)
d = rbind(d, data.frame(from=13, to=14))
d
likes
shiny::runApp('C:/McHacks/visualizing_fb_network')
install.packages("igraph")
shiny::runApp('C:/McHacks/visualizing_fb_network')
# Gets the likes on a comment
shiny::runApp('C:/McHacks/visualizing_fb_network')
getPost(post_id, token)
getPost(post, token)
post_id = "629364947157403_761091863984710"
getPost(post_id, token)
post = getPost(post_id, token)
post$comments
for (c in post$comments) { print(comment )}
for (c in post$comments) { print(c))}
for (c in post$comments) { print(c)}
for (c in post$comments) { print(c); print("")}
for (comment in post$comments) {print(comment$likes)}
post$comments
post$comments$id
post$comments$name
post$comments$from
post$from
post$from_name
post$post
post$comments$from_name
a = c(1,2,3)
b = c(4,5,6)
data.frame(id=a, id2=b)
d = data.frame(id=a, id2=b)
for (i in d) {print(d$id)}
for (i in d) {print(d$id2)}
for (i in d) {print(i$id2)}
d
d$id1
d$id2
d[0]
d[1]
d[2]
rbind(a, b)
cbind(a, b)
for (i in cbind(a, b))
{ print(i)}
for (i in 10) { print(i)}
range(1, 4,6)
for (i in 4:10) { print (i)}
shiny::runApp('C:/McHacks/visualizing_fb_network')
token = "CAACEdEose0cBAMke3W6L9SaAJ46tvuiXoE33VzEOPCPll8O5vy24tbVLIH4fZC67838kZBuNxRf1SKzygoTZCezr6PhbSZBijJoZAnkVZBbRglE4JVl8KNbWQ8GqAIRSl4zsTTKqkRHVh5UCFCug1DpYU52JQPrZBELgZB3paSf73jMiAlYaUacgirmBQ3ondHkqyiVPj0M5xrahdrYZAuTn6"
token = "CAACEdEose0cBAMke3W6L9SaAJ46tvuiXoE33VzEOPCPll8O5vy24tbVLIH4fZC67838kZBuNxRf1SKzygoTZCezr6PhbSZBijJoZAnkVZBbRglE4JVl8KNbWQ8GqAIRSl4zsTTKqkRHVh5UCFCug1DpYU52JQPrZBELgZB3paSf73jMiAlYaUacgirmBQ3ondHkqyiVPj0M5xrahdrYZAuTn6"
post_id = "761091863984710"
post_id = paste(group_id, post_id, sep='_')
group_id = "629364947157403"
post_id = paste(group_id, post_id, sep='_')
post_id
comment_id = "629364947157403_761091863984710_770797046347525"
likes <- getCommentLikes(comment_id, token)
likes
comment_id = "629364947157403_761091863984710_770813919679171"
likes <- getCommentLikes(comment_id, token)
likes
comment_id = "629364947157403_770797046347525_770813919679171"
likes <- getCommentLikes(comment_id, token)
likes
likes[1]
likes[1]$id
(likes[1])$name
likes$id
likes$name
likes[0]
likes[1]
likes[1][1]
likes[1][1]$name
likes[1][1][1]
likes[1][1][1]
likes[1][1][1][1]
likes[1][1][1][1][1]
likes[1,1]
likes[1:]
likes[,1]
likes[1,name]
likes[1]$name
likes[1[1]]
likes[1[1[1[1[1]]]]]
likes[2]
likes[[1]]
likes[[1]]$name
shiny::runApp('C:/McHacks/visualizing_fb_network')
length(NULL)
1:1
shiny::runApp('C:/McHacks/visualizing_fb_network')
shiny::runApp('C:/McHacks/visualizing_fb_network')
shiny::runApp('C:/McHacks/visualizing_fb_network')
i = data.frame(from=integer(0), to=integer(0))
i
rbind(i, data.frame(from=14, to=25))
shiny::runApp('C:/McHacks/visualizing_fb_network')
shiny::runApp('C:/McHacks/visualizing_fb_network')
d = data.frame(from=numeric(4), to=numeric(4))
d
d[,'from']
rownames(d)
rownames(d) = c()
d
rownames(d)
shiny::runApp('C:/McHacks/visualizing_fb_network')
shiny::runApp('C:/McHacks/visualizing_fb_network')
likes
post$likes
post$likes[2]
post$likes$name
post$likes
post$likes$from_name
post$likes$from_name[5]
post
post_from_id
post$name
post$message
post$post
post$post$from_name
shiny::runApp('C:/McHacks/visualizing_fb_network')
setwd("C:/McHacks/visualizing_fb_network")
shiny::runApp('C:/McHacks/r-programs')
setwd("C:/McHacks/mcviz")
shiny::runApp()
